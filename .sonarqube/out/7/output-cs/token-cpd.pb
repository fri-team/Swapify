ª
*C:\Projects\Swapify\Entities\BaseEntity.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 

BaseEntity 
{ 
public 
Guid 
Id 
{ 
get 
; 
set !
;! "
}# $
} 
}		 ¨*
%C:\Projects\Swapify\Entities\Block.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
Block 
{ 
public 
	BlockType 
	BlockType "
{# $
get% (
;( )
set* -
;- .
}/ 0
public		 
Guid		 
CourseId		 
{		 
get		 "
;		" #
set		$ '
;		' (
}		) *
public

 
Day

 
Day

 
{

 
get

 
;

 
set

 !
;

! "
}

# $
public 
byte 
	StartHour 
{ 
get  #
;# $
set% (
;( )
}* +
public 
byte 
Duration 
{ 
get "
;" #
set$ '
;' (
}) *
public 
string 
Room 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Teacher 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Block 
( 
) 
{ 
} 
public 
Block 
( 
	BlockType 
type #
,# $
Day% (
day) ,
,, -
byte. 2
	startHour3 <
,< =
byte> B
durationC K
,K L
stringM S
roomT X
,X Y
stringZ `
teachera h
)h i
{ 	
	BlockType 
= 
type 
; 
Day 
= 
day 
; 
	StartHour 
= 
	startHour !
;! "
Duration 
= 
duration 
;  
Room 
= 
room 
; 
Teacher 
= 
teacher 
; 
} 	
public 
bool 
IsSameAs 
( 
Block "
b# $
)$ %
{   	
return!! 
(!! 
this!! 
.!! 
	BlockType!! "
==!!# %
b!!& '
?!!' (
.!!( )
	BlockType!!) 2
)!!2 3
&&!!4 6
("" 
this"" 
."" 
Day"" 
=="" 
b"" 
?"" 
.""  
Day""  #
)""# $
&&""% '
(## 
this## 
.## 
	StartHour## 
==##  "
b### $
?##$ %
.##% &
	StartHour##& /
)##/ 0
&&##1 3
($$ 
this$$ 
.$$ 
Duration$$ 
==$$ !
b$$" #
?$$# $
.$$$ %
Duration$$% -
)$$- .
&&$$/ 1
(%% 
this%% 
.%% 
Room%% 
==%% 
b%% 
?%%  
.%%  !
Room%%! %
)%%% &
&&%%' )
(&& 
this&& 
.&& 
Teacher&& 
==&&  
b&&! "
?&&" #
.&&# $
Teacher&&$ +
)&&+ ,
;&&, -
}'' 	
public)) 
Block)) 
Clone)) 
()) 
))) 
{** 	
var++ 
newBlock++ 
=++ 
new++ 
Block++ $
(++$ %
)++% &
;++& '
newBlock,, 
.,, 
	BlockType,, 
=,,  
this,,! %
.,,% &
	BlockType,,& /
;,,/ 0
newBlock-- 
.-- 
CourseId-- 
=-- 
this--  $
.--$ %
CourseId--% -
;--- .
newBlock.. 
... 
Day.. 
=.. 
this.. 
...  
Day..  #
;..# $
newBlock// 
.// 
Duration// 
=// 
this//  $
.//$ %
Duration//% -
;//- .
newBlock00 
.00 
Room00 
=00 
this00  
.00  !
Room00! %
;00% &
newBlock11 
.11 
	StartHour11 
=11  
this11! %
.11% &
	StartHour11& /
;11/ 0
newBlock22 
.22 
Teacher22 
=22 
this22 #
.22# $
Teacher22$ +
;22+ ,
return33 
newBlock33 
;33 
}44 	
public66 
override66 
bool66 
Equals66 #
(66# $
object66$ *
obj66+ .
)66. /
{77 	
Block88 
other88 
=88 
obj88 
as88  
Block88! &
;88& '
return99 
(99 
IsSameAs99 
(99 
other99 "
)99" #
&&99$ &
this99' +
.99+ ,
CourseId99, 4
==995 7
other998 =
.99= >
CourseId99> F
)99F G
;99G H
}:: 	
};; 
}<< Ñ

2C:\Projects\Swapify\Entities\BlockChangeRequest.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
BlockChangeRequest #
:$ %

BaseEntity& 0
{		 
public 
Guid 
	StudentId 
{ 
get  #
;# $
set% (
;( )
}* +
public 
Block 
	BlockFrom 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
Block 
BlockTo 
{ 
get "
;" #
set$ '
;' (
}) *
public 
ExchangeStatus 
Status $
{% &
get' *
;* +
set, /
;/ 0
}1 2
public 
DateTime 
DateOfCreation &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
BlockChangeRequest !
(! "
)" #
{ 	
Status 
= 
ExchangeStatus #
.# $
WaitingForExchange$ 6
;6 7
} 	
} 
} ‘
&C:\Projects\Swapify\Entities\Course.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
Course 
: 

BaseEntity $
{ 
public 
string 

CourseCode  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
string 

CourseName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
	Timetable 
	Timetable "
{# $
get% (
;( )
set* -
;- .
}/ 0
}		 
}

 €
/C:\Projects\Swapify\Entities\Enums\BlockType.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
." #
Enums# (
{ 
public 

enum 
	BlockType 
{ 
Lecture		 
=		 
$num		 
,		 

Laboratory

 
=

 
$num

 
,

 
	Excercise 
= 
$num 
} 
} ƒ
0C:\Projects\Swapify\Entities\Enums\CourseType.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
." #
Enums# (
{ 
public 

enum 

CourseType 
{ 
	Voluntary		 
=		 
$num		 
,		 

Compulsory

 
=

 
$num

 
,

 
Elective 
= 
$num 
} 
} ú
)C:\Projects\Swapify\Entities\Enums\Day.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
." #
Enums# (
{ 
public 

enum 
Day 
{ 
Monday		 
=		 
$num		 
,		 
Tuesday

 
=

 
$num

 
,

 
	Wednesday 
= 
$num 
, 
Thursday 
= 
$num 
, 
Friday 
= 
$num 
} 
} È
4C:\Projects\Swapify\Entities\Enums\ExchangeStatus.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
." #
Enums# (
{ 
public 

enum 
ExchangeStatus 
{ 
WaitingForExchange		 
=		 
$num		 
,		 
Done

 
=

 
$num

 
} 
} ½
0C:\Projects\Swapify\Entities\Enums\StatusType.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
." #
Enums# (
{ 
public 

enum 
StatusRequestType !
{ 
Done 
= 
$num 
, 
Rejected 
= 
$num 
} 
}		 ù
'C:\Projects\Swapify\Entities\Student.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
Student 
: 

BaseEntity %
{ 
public		 
	Timetable		 
	Timetable		 "
{		# $
get		% (
;		( )
set		* -
;		- .
}		/ 0
public

 

StudyGroup

 

StudyGroup

 $
{

% &
get

' *
;

* +
set

, /
;

/ 0
}

1 2
} 
} Ï
*C:\Projects\Swapify\Entities\StudyGroup.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 

StudyGroup 
: 

BaseEntity (
{ 
public		 
string		 
	GroupName		 
{		  !
get		" %
;		% &
set		' *
;		* +
}		, -
public

 
List

 
<

 
Guid

 
>

 
Courses

 !
{

" #
get

$ '
;

' (
set

) ,
;

, -
}

. /
public 
	Timetable 
	Timetable "
{# $
get% (
;( )
set* -
;- .
}/ 0
public 

StudyGroup 
( 
) 
{ 	
Courses 
= 
new 
List 
< 
Guid #
># $
($ %
)% &
;& '
} 	
} 
} Ê
)C:\Projects\Swapify\Entities\Timetable.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
	Timetable 
: 

BaseEntity '
{		 
private

 
List

 
<

 
Block

 
>

 
_blocks

 #
;

# $
public 
virtual 
IList 
< 
Block "
>" #
	AllBlocks$ -
{ 	
get 
=> 
_blocks 
. 

AsReadOnly %
(% &
)& '
;' (
} 	
public 
	Timetable 
( 
) 
{ 	
_blocks 
= 
new 
List 
< 
Block $
>$ %
(% &
)& '
;' (
} 	
public 
	Timetable 
Clone 
( 
)  
{ 	
var 
newTimetable 
= 
new "
	Timetable# ,
(, -
)- .
;. /
foreach 
( 
var 
block 
in !
_blocks" )
)) *
{ 
newTimetable 
. 
AddNewBlock (
(( )
block) .
.. /
Clone/ 4
(4 5
)5 6
)6 7
;7 8
} 
return 
newTimetable 
;  
} 	
public!! 
void!! 
AddNewBlock!! 
(!!  
Block!!  %
newBlock!!& .
)!!. /
{"" 	
_blocks## 
.## 
Add## 
(## 
newBlock##  
)##  !
;##! "
}$$ 	
public&& 
bool&& 
RemoveBlock&& 
(&&  
Block&&  %
block&&& +
)&&+ ,
{'' 	
for(( 
((( 
int(( 
i(( 
=(( 
$num(( 
;(( 
i(( 
<(( 
_blocks((  '
.((' (
Count((( -
;((- .
i((/ 0
++((0 2
)((2 3
{)) 
if** 
(** 
_blocks** 
[** 
i** 
]** 
.** 
IsSameAs** '
(**' (
block**( -
)**- .
)**. /
{++ 
_blocks,, 
.,, 
RemoveAt,, $
(,,$ %
i,,% &
),,& '
;,,' (
return-- 
true-- 
;--  
}.. 
}// 
return00 
false00 
;00 
}11 	
public33 
bool33 
ContainsBlock33 !
(33! "
Block33" '
bl33( *
)33* +
{44 	
return55 
_blocks55 
.55 
Any55 
(55 
x55  
=>55! #
x55$ %
.55% &
IsSameAs55& .
(55. /
bl55/ 1
)551 2
)552 3
;553 4
}66 	
}99 
}:: —
$C:\Projects\Swapify\Entities\User.cs
	namespace 	
FRITeam
 
. 
Swapify 
. 
Entities "
{ 
public 

class 
User 
: 
MongoIdentityUser )
{ 
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
Surname 
{ 
get  #
;# $
set% (
;( )
}* +
public		 
Student		 
Student		 
{		  
get		! $
;		$ %
set		& )
;		) *
}		+ ,
public 
User 
( 
) 
{ 	
} 	
public 
User 
( 
string 
email  
,  !
string" (
name) -
,- .
string/ 5
surname6 =
)= >
{ 	
Email 
= 
UserName 
= 
email $
;$ %
Name 
= 
name 
; 
Surname 
= 
surname 
; 
Student 
= 
null 
; 
} 	
} 
} 