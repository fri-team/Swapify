name: Deploy to AWS ECS
on:
 push:
  branches:
   - develop   

env:
 ASPNETCORE_ENVIRONMENT: Production
jobs:  
 action_build:
  name: actions_build
  runs-on: ubuntu-latest    
  steps:
   - uses: actions/checkout@v2
   - name: Replace jwt private key    
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##JWTKEY##"
        replace: "${{ secrets.JWT_SECRET }}"
   - name: replace_front_end_recaptcha_key
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##RECAPTCHA_FRONT_END_KEY##"
        replace: "${{ secrets.RECAPTCHA_FRONT_END_KEY }}"
        include: "WebApp/"
   - name: replace_back_end_recaptcha_key
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##RECAPTCHA_BACK_END_KEY##"
        replace: "${{ secrets.RECAPTCHA_BACK_END_KEY }}"
        include: "appsettings.json"
   - name: replace_SMTP_SERVER
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##SMTP_SERVER##"
        replace: "${{ secrets.SMTP_SERVER }}"
        include: "appsettings.json"
   - name: replace_SMTP_PORT
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##SMTP_PORT##"
        replace: "${{ secrets.SMTP_PORT }}"
        include: "appsettings.json"
   - name: replace_MAIL_USERNAME
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##MAIL_USERNAME##"
        replace: "${{ secrets.MAIL_USERNAME }}"
        include: "appsettings.json"
   - name: replace_SENDER_EMAIL
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##SENDER_EMAIL##"
        replace: "${{ secrets.SENDER_EMAIL }}"
        include: "appsettings.json"
   - name: replace_MAIL_PASSWORD
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##MAIL_PASSWORD##"
        replace: "${{ secrets.MAIL_PASSWORD }}"
        include: "appsettings.json"
   - name: replace_FEEDBACK_MAIL
     uses: jacobtomlinson/gha-find-replace@master
     with:
        find: "##FEEDBACK_MAIL##"
        replace: "${{ secrets.FEEDBACK_MAIL }}"
        include: "appsettings.json"
   - name: Set up QEMU
     uses: docker/setup-qemu-action@v1
   - name: Set up Docker Buildx
     uses: docker/setup-buildx-action@v1
   - name: Login to DockerHub
     uses: docker/login-action@v1 
     with:
      username: swapifyapp
      password: ${{ secrets.DOCKERHUB_PASSWORD }}
   - name: Build and push
     id: docker_build
     uses: docker/build-push-action@v2
     with:
      context: .
      push: true
      tags: swapifyapp/swapify-app        
   - name: Configure_SSH
     run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/aws.key
          chmod 600 ~/.ssh/aws.key
          echo "${{ secrets.DOCKERHUB_PASSWORD }}" > mypassfile.txt
          cat >>~/.ssh/config <<END
          Host aws
            HostName $SSH_HOST
            User $SSH_USER
            IdentityFile ~/.ssh/aws.key
            StrictHostKeyChecking no
          END
     env:
          SSH_USER: ubuntu
          SSH_KEY: ${{ secrets.PRIVATE_KEY}}
          SSH_HOST: ${{ secrets.HOST }}   
   - name: Copy_file
     uses: garygrossgarten/github-action-scp@release
     with:
      local: mypassfile.txt
      remote: /home/ubuntu/mypassfile.txt
      host: ${{ secrets.HOST }}
      username: ubuntu
      privateKey: ${{ secrets.PRIVATE_KEY}}
   - name: Deployment
     run: ssh aws 'cd /home/ubuntu/Swapify;        
        sudo cat /home/ubuntu/mypassfile.txt | sudo docker login --username swapifyapp --password-stdin docker.io;        
        sudo rm /home/ubuntu/mypassfile.txt;
        sudo docker-compose down;
        sudo docker rmi swapify-app -f;
        sudo docker rmi swapifyapp/swapify-app -f;
        sudo docker system prune -f;
        sudo docker pull swapifyapp/swapify-app;
        sudo docker tag swapifyapp/swapify-app swapify-app;
        sudo docker-compose up -d;
        sudo docker logout'                